{"version":3,"sources":["Detail.js"],"names":["박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","누른탭","Info","재고","connect","state","newProps","reducer","alert열렸니","reducer2","id","useParams","history","useHistory","useState","alert","alert변경","inputData","inputData변경","누른탭변경","스위치","타이머","setTimeout","console","log","arr","localStorage","getItem","JSON","parse","push","Set","setItem","stringify","clearTimeout","className","style","display","width","position","right","top","Body","Title","Subtitle","length","map","a","i","onClick","shoes","title","onChange","e","target","value","src","content","price","재고변경","dispatch","type","payload","name","quan","variant","defaultActiveKey","Item","Link","eventKey","in","classNames","timeout"],"mappings":"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","file":"static/js/4.63872c3c.chunk.js","sourcesContent":["/* eslint-disable */\r\n\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport \"./Detail.scss\";\r\nimport { Nav, Card, ListGroup } from \"react-bootstrap\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet 박스 = styled.div`\r\n  padding: 20px;\r\n  background-color: white;\r\n`;\r\n\r\nlet 제목 = styled.h4`\r\n  font-size: 25px;\r\n  color: ${(props) => props.색상};\r\n`;\r\n\r\nfunction Detail(props) {\r\n  let { id } = useParams(); //url에 할당된 id, key 등의 값을 파라미터로 사용\r\n  let history = useHistory();\r\n\r\n  let [alert, alert변경] = useState(true);\r\n  let [inputData, inputData변경] = useState(\"\");\r\n  let [누른탭, 누른탭변경] = useState(0);\r\n  let [스위치, 스위치변경] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let 타이머 = setTimeout(() => {\r\n      alert변경(false);\r\n    }, 2000);\r\n    console.log(\"안녕ㄴ\");\r\n\r\n    //var t = props.shoes[id].title;\r\n\r\n    var arr = localStorage.getItem(\"obj\");\r\n    if (arr == null) {\r\n      arr = [];\r\n    } else {\r\n      arr = JSON.parse(arr);\r\n    }\r\n\r\n    arr.push(id);\r\n    arr = new Set(arr); //set 자료형으로 만든다\r\n    arr = [...arr]; // 소괄호를 벗긴다.\r\n    localStorage.setItem(\"obj\", JSON.stringify(arr));\r\n\r\n    return () => {\r\n      clearTimeout(타이머);\r\n    };\r\n  }, []);\r\n\r\n  //[대괄호] 안에 state가 변경될때만 useEffect를 실행하도록\r\n  //아무것도 없을땐 처음 그 페이지가 시작될때만 useEffect가 실행됨\r\n  //아니면 업데이트가 될때 계속 실행됨\r\n\r\n  var arr = localStorage.getItem(\"obj\");\r\n  if (arr == null) {\r\n    arr = [];\r\n  } else {\r\n    arr = JSON.parse(arr);\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Card\r\n        style={{\r\n          display: \"inline-block\",\r\n          width: \"10rem\",\r\n          position: \"fixed\",\r\n          right: \"20px\",\r\n          top: \"100px\",\r\n        }}\r\n      >\r\n        <Card.Body>\r\n          <Card.Title>오늘 본 상품</Card.Title>\r\n          <Card.Subtitle className=\"mb-2 text-muted\">\r\n            마음에 들면 클릭\r\n          </Card.Subtitle>\r\n\r\n          {arr.length > 0 ? (\r\n            arr.map((a, i) => {\r\n              return (\r\n                <div\r\n                  onClick={() => {\r\n                    history.push(\"/detail/\" + a);\r\n                  }}\r\n                >\r\n                  <div> {props.shoes[a].title} </div>\r\n                </div>\r\n              );\r\n            })\r\n          ) : (\r\n            <div> </div>\r\n          )}\r\n        </Card.Body>\r\n      </Card>\r\n\r\n      <박스>\r\n        <제목 색상=\"red\">Detail</제목>\r\n        <제목 색상=\"blue\">Detail</제목>\r\n        <제목 className=\"red\">Detail</제목>\r\n      </박스>\r\n\r\n      {inputData}\r\n      <input\r\n        onChange={(e) => {\r\n          inputData변경(e.target.value);\r\n        }}\r\n      />\r\n\r\n      {alert === true ? (\r\n        <>\r\n          <div className=\"my-alert\">\r\n            <p>재고가 얼마 남지 않았습니다</p>\r\n          </div>\r\n          <div className=\"my-alert2\">\r\n            <p>scss에서 extend 사용</p>\r\n          </div>\r\n        </>\r\n      ) : null}\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6\">\r\n          <img\r\n            src={\r\n              \"https://codingapple1.github.io/shop/shoes\" +\r\n              (props.shoes[id].id + 1) +\r\n              \".jpg\"\r\n            }\r\n            width=\"100%\"\r\n          />\r\n        </div>\r\n        <div className=\"col-md-6 mt-4\">\r\n          <h4 className=\"pt-5\">{props.shoes[id].title}</h4>\r\n          <p>{props.shoes[id].content}</p>\r\n          <p>{props.shoes[id].price}</p>\r\n          <Info 재고={props.재고}></Info>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              props.재고변경([9, 11, 12]);\r\n              props.dispatch({\r\n                type: \"항목추가\",\r\n                payload: {\r\n                  id: props.shoes[id].id,\r\n                  name: props.shoes[id].title,\r\n                  quan: 1,\r\n                },\r\n              });\r\n              history.push(\"/cart\");\r\n            }}\r\n          >\r\n            주문하기\r\n          </button>\r\n          <button\r\n            className=\"btn btn-danger\"\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            뒤로가기\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <Nav className=\"mt-5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-0\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(0);\r\n            }}\r\n          >\r\n            상세 설명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-1\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(1);\r\n            }}\r\n          >\r\n            사이즈 설명\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n        <Nav.Item>\r\n          <Nav.Link\r\n            eventKey=\"link-2\"\r\n            onClick={() => {\r\n              스위치변경(false);\r\n              누른탭변경(2);\r\n            }}\r\n          >\r\n            Option 3\r\n          </Nav.Link>\r\n        </Nav.Item>\r\n      </Nav>\r\n\r\n      <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\r\n        <TabContent 누른탭={누른탭} 스위치변경={스위치변경}></TabContent>\r\n      </CSSTransition>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TabContent(props) {\r\n  useEffect(() => {\r\n    props.스위치변경(true);\r\n  });\r\n\r\n  if (props.누른탭 === 0) {\r\n    return (\r\n      <div>\r\n        {\" \"}\r\n        Some quick example text to build on the card title and make up the bulk\r\n        of the card's content. Some quick example text to build on the card\r\n        title and make up the bulk of the card's content.Some quick example text\r\n        to build on the card title and make up the bulk of the card's\r\n        content.Some quick example text to build on the card title and make up\r\n        the bulk of the card's content.Some quick example text to build on the\r\n        card title and make up the bulk of the card's content.Some quick example\r\n        text to build on the card title and make up the bulk of the card's\r\n        content.Some quick example text to build on the card title and make up\r\n        the bulk of the card's content.{\" \"}\r\n      </div>\r\n    );\r\n  } else if (props.누른탭 === 1) {\r\n    return <div> OPT 2 페이지 </div>;\r\n  } else if (props.누른탭 === 2) {\r\n    return <div> OPT 3 페이지 </div>;\r\n  }\r\n}\r\n\r\nfunction Info(props) {\r\n  return <p>재고 : {props.재고[0]}</p>;\r\n}\r\n\r\nfunction stateprops(state) {\r\n  return {\r\n    newProps: state.reducer,\r\n    alert열렸니: state.reducer2,\r\n  };\r\n}\r\n\r\nexport default connect(stateprops)(Detail);\r\n"],"sourceRoot":""}