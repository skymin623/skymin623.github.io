{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","글제목","글제목modal","className","누른제목","Profile","state","name","age","this","setState","onClick","changeName","bind","React","Component","App","useState","글제목변경","따봉","따봉변경","modal","modal변경","누른제목변경","입력값","입력값변경","newArray","어레이","i","push","반복된UI","onChange","e","target","value","입력","newArr","새글제목","arrayCopy","unshift","map","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cb218b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* eslint-disable */\n\n\nimport React, {useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App(){\n \n  let [글제목,글제목변경] = useState(['남자 코트 추천', '제목제목제목', '강남 맛집']);\n  let [따봉, 따봉변경] = useState(0);\n\n  let [modal, modal변경] = useState(false);\n  let [누른제목, 누른제목변경] = useState(0);\n\n  let [입력값, 입력값변경] = useState('');\n\n  let posts = '강남 고기 맛집';\n \n  function 제목바꾸기() {\n    var newArray = [...글제목];\n    글제목[0] === '여자 코트 추천'\n    ? newArray[0] = '남자 코트 추천'\n    : newArray[0] = '여자 코트 추천';\n    \n    글제목변경( newArray );\n  }\n\n  function 새글제목(입력) {\n    var newArr = [...글제목];\n    newArr.push(입력);\n    글제목변경( newArr);\n   \n    \n  }\n  \n  function 반복된UI(){\n    var 어레이 = [];\n    for (var i = 0; i < 3; i++) {\n      어레이.push(<div>안녕</div>)\n    }\n    return 어레이\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 blog</div>\n      </div>\n      <div className=\"list\">\n      <button onClick={ 제목바꾸기 }> 수정버튼 </button>\n      <h3> { 글제목[0] } <span onClick = {()=>{따봉변경(따봉+1)}}>👍</span> {따봉} </h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3>{ 글제목[1] }</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      <div className=\"list\">\n        <h3 onClick = {()=>{modal변경(true)}}>{ 글제목[2] }</h3>\n        <p>2월 17일 발행</p>\n        <hr/>\n      </div>\n      \n      { 반복된UI() }\n      \n      \n\n      {/* \n      <input onChange={(e)=>{ 입력값변경(e.target.value)}} />\n      { 입력값 } */}\n      \n      <button onClick = { ()=>{modal변경(!modal)}}>열고닫기</button>\n\n\n      <div className=\"publish\">\n        <input onChange={(e)=>{ 입력값변경(e.target.value)}} />\n        <button onClick = { ()=>{새글제목(입력값)}} >저장</button>\n        <button onClick={ ()=>{ \n\n          let arrayCopy = [...글제목];\n          arrayCopy.unshift(입력값);\n          글제목변경( arrayCopy )\n\n          }}>저장2222</button>\n      </div> \n\n      <Profile/>\n\n      { 글제목.map(function(a, i){\n        return (\n        <div className=\"list\" key = {i}>\n          <h3 onClick = {()=>{modal변경(true), 누른제목변경(i)}}>{ a }<span onClick = {()=>{따봉변경(따봉+1)}}>👍</span>{따봉}</h3>\n          <p>2월 18일 발행</p>\n          <hr />\n        </div>\n       ) }) \n      }\n      <button onClick={ ()=>{누른제목변경(0)} }> 버튼1 </button>\n      <button onClick={ ()=>{누른제목변경(1)} }> 버튼2 </button>\n      <button onClick={ ()=>{누른제목변경(2)} }> 버튼3 </button>\n\n\n      { \n         modal === true\n         ? <Modal 글제목modal = {글제목} 누른제목 = {누른제목}></Modal>\n         : null\n      }\n\n    </div>\n  )\n}\n\nfunction Modal(props){\n  let 글제목 = props.글제목modal;\n  return (\n    <div className=\"modal\">\n      <h2> 제목 : { 글제목[props.누른제목]} </h2>\n      <p>날짜</p>\n      <p>상세내용</p>\n      \n    \n      \n    \n\n    </div>\n  )\n}\n\n\nclass Profile extends React.Component {\n  constructor(){\n    super();\n    this.state = { name : 'Kim', age : 30 }\n  }\n  changeName(){\n    this.setState( {name : 'Park'} )\n  }\n  render(){\n    return (\n      <div>\n      <h3> 프로필영역입니다 </h3>\n      <p> 저는 { this.state.name }입니다 </p>\n      <button onClick={ this.changeName.bind(this)} > 버튼 </button>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}